---
# tasks file for cis-hardening

- name: perms on grub.conf
  file:
    name: /boot/grub2/grub.cfg
    mode: 0600
  notify: update aide
  tags:
    - config
    - security

- name: blacklist modules
  lineinfile:
    create: yes
    dest: "/etc/modprobe.d/{{item}}.conf"
    regexp: "{{item}}"
    line: "install {{item}} /bin/true"
  with_items: '{{ blacklisted_kernel_modules }}'
  notify: update aide
  tags:
    - config
    - security

- name: Add auditd configuration
  template:
    src: auditd.conf.j2
    dest: /etc/audit/auditd.conf
    owner: root
    group: root
    mode: 0640
  notify:
    - restart auditd
    - update aide
  tags:
    - config
    - audit
    - security

- name: Search for privileged commands
  shell: "find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null | cat"
  check_mode: no
  register: audit_privileged_commands
  changed_when: False
  tags:
    - config
    - audit
    - security

- name: Apply CIS & STIG audit rules
  template:
    src: security.rules.j2
    dest: /etc/audit/rules.d/security.rules
    owner: root
    group: root
    mode: 0600
  notify:
    - restart auditd
    - update aide
  tags:
    - config
    - audit
    - security

- name: Apply CIS login restrictions
  template:
    src: login.defs.j2
    dest: /etc/login.defs
    owner: root
    group: root
    mode: 0644
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl kernel.randomize_va_space is set to 2
  sysctl:
    name: kernel.randomize_va_space
    value: 2
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Disable ctl+alt+delete rebooting the system from cli
  systemd:
    name: ctrl-alt-del.target
    masked: yes
  notify: update aide
  tags:
    - config
    - security

- name: Setup kdump service state
  service:
    name: kdump
    enabled: "{{ 'no' if not kdump_service | default(False) else 'yes' }}"
    state: "{{ 'stopped' if not kdump_service | default(False) else 'started' }}"
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.default.send_redirects
    value: 0
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: 0
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv4.ip_forward is set correctly
  sysctl:
    name: net.ipv4.ip_forward
    value: '{{ sysctl_ip_forwarding }}'
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: 0
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
  sysctl:
    name: net.ipv4.conf.default.accept_redirects
    value: 0
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: 1
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
  sysctl:
    name: net.ipv6.conf.all.accept_source_route
    value: 0
    state: present
    reload: yes
  notify: update aide
  tags:
    - config
    - security

- name: Limit the Number of Concurrent Login Sessions Allowed Per User
  pam_limits:
    domain: '*'
    limit_type: hard
    limit_item: maxlogins
    value: 10
  notify: update aide
  tags:
    - config
    - security

- name: Add /etc/default/useradd
  template:
    src: useradd.j2
    dest: /etc/default/useradd
    owner: root
    group: root
    mode: 0644
  notify: update aide
  tags:
    - security
    - useradd

- name: Install dracut-fips for fips enabled kernel
  yum:
    name: '{{ fips_packages }}'
    state: installed
  notify: update aide
  tags:
    - install
    - security

- name: Add grub password
  template:
    src: 01_users.j2
    dest: /etc/grub.d/01_users
    owner: root
    group: root
    mode: 0750
  when: grub_password_hash is defined
  notify:
    - update grub config
    - update aide
  tags:
    - grub
    - security

- name: Prevent Log In to Accounts With Empty Password
  replace:
    dest: '/etc/pam.d/{{ item }}-auth'
    follow: yes
    regexp: 'nullok'
  with_items:
    - system
    - password
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable maxrepeat is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^maxrepeat"
    line: "maxrepeat = 2"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable maxclassrepeat is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^maxclassrepeat"
    line: "maxclassrepeat = 4"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable dcredit is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^dcredit"
    line: "dcredit = -1"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable minlen is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^minlen"
    line: "minlen = 15"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable ucredit is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^ucredit"
    line: "ucredit = -2"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable ocredit is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^ocredit"
    line: "ocredit = -2"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable lcredit is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^lcredit"
    line: "lcredit = -2"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable difok is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^difok"
    line: "difok = 8"
  notify: update aide
  tags:
    - auth
    - pam
    - security

- name: Ensure PAM variable minclass is set accordingly
  lineinfile:
    create: yes
    dest: "/etc/security/pwquality.conf"
    regexp: "^minclass"
    line: "minclass = 4"
  notify: update aide
  tags:
    - auth
    - pam
    - security

#- name: Ensure permission 0644 on /etc/ssh/*.pub
#  file:
#    path: '{{ item }}'
#    mode: 0644
#  with_items:
#    - /etc/ssh/*.pub
#  tags:
#    - ssh
#    - security
#
#- name: Ensure permission 0600 on /etc/ssh/*_key
#  file:
#    path: '{{ item }}'
#    mode: 0600
#  with_items:
#    - /etc/ssh/*_key
#  tags:
#    - ssh
#    - security

- name: set auth pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        even_deny_root
        deny={{ var_accounts_passwords_pam_faillock_deny }}
        unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
        fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
    state: before
  with_items:
    - system-auth
    - password-auth
  tags:
    - pam
    - security

- name: set auth pam_faillock after pam_unix.so
  pamd:
    name: '{{ item }}'
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
        even_deny_root
        deny={{ var_accounts_passwords_pam_faillock_deny }}
        unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
        fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
    state: after
  with_items:
    - system-auth
    - password-auth
  tags:
    - pam
    - security

- name: set account pam_faillock before pam_unix.so
  pamd:
    name: '{{ item }}'
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  with_items:
    - system-auth
    - password-auth
  tags:
    - pam
    - security

- name: "Do not allow users to reuse recent passwords - system-auth (change)"
  replace:
    dest: /etc/pam.d/system-auth
    follow: yes
    regexp: '^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$'
    replace: '\g<1>{{ var_password_pam_unix_remember }}\g<3>'
  tags:
    - pam
    - security

- name: "Do not allow users to reuse recent passwords - system-auth (add)"
  replace:
    dest: /etc/pam.d/system-auth
    follow: yes
    regexp: '^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$'
    replace: '\g<0> remember={{ var_password_pam_unix_remember }}'
  tags:
    - pam
    - security

- name: get back device associated to mountpoint
  shell: mount | grep ' /home ' |cut -d ' ' -f 1
  register: device_name
  check_mode: no
  tags:
    - security
    - mount

- name: get back device previous mount option
  shell: mount | grep ' /home ' | sed -re 's:.*\((.*)\):\1:'
  register: device_cur_mountoption
  check_mode: no
  tags:
    - security
    - mount

- name: get back device fstype
  shell: mount | grep ' /home ' | cut -d ' ' -f 5
  register: device_fstype
  check_mode: no
  tags:
    - security
    - mount

- name: Ensure permission nosuid are set on /home
  mount:
    path: "/home"
    src: "{{device_name.stdout}}"
    opts: "{{device_cur_mountoption.stdout}},nosuid"
    state: "mounted"
    fstype: "{{device_fstype.stdout}}"
  when: device_name.stdout is defined and device_name.stdout != "" and device_cur_mountoption.stdout is defined and device_cur_mountoption.stdout != "" and device_fstype.stdout is defined and device_fstype.stdout != ""
  tags:
    - security
    - mount

- name: Install smart card packages for mutlifactor auth
  yum:
    name: [ 'esc', 'pam_pkcs11', 'authconfig-gtk' ]
    state: installed
  notify: update aide
  tags:
    - install
    - security

- name: Install osscap for security auditing
  yum:
    name: [ 'openscap-scanner', 'scap-security-guide' ]
    state: installed
  notify: update aide
  tags:
    - install
    - security

